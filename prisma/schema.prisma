generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["windows", "native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  username         String?   @unique
  email            String    @unique
  password         String
  role             Role      @default(PLAYER)
  image            String?
  creationDate     DateTime  @default(now())
  modificationDate DateTime  @default(now()) @updatedAt

  // Player specific fields
  position         String?
  age             Int?
  nationality     String?
  currentTeam     Team?     @relation("TeamPlayers", fields: [teamId], references: [id])
  teamId          String?
  
  // Team specific fields
  managedTeam     Team?     @relation("TeamManager")
  
  // Common relations
  createdTasks    Task[]    @relation("UserCreatedTasks")
}

model Team {
  id              String    @id @default(cuid())
  name            String
  image           String?
  league          String
  country         String
  status          Status    @default(HIRING)
  manager         User      @relation("TeamManager", fields: [managerId], references: [id])
  managerId       String    @unique
  players         User[]    @relation("TeamPlayers")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Task {
  id          String    @id @default(cuid())
  name        String
  description String?
  priority    String    @default("low")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   User      @relation("UserCreatedTasks", fields: [createdById], references: [id])
  createdById String
}

enum Role {
  ADMIN
  TEAM
  PLAYER
}

enum Status {
  HIRING
  FULL
  INACTIVE
}