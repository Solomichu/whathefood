// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  //leer url de .env.local, 
  url = env("DATABASE_URL")
}

model User {
  //Basic info
  id                String        @id @default(cuid())
  username          String?       @unique
  email             String        @unique
  password          String  
  role              Role          @default(USER)
  image             String?
  creationDate      DateTime      @default(now())
  modificationDate  DateTime      @default(now()) @updatedAt

  //Relations
  createdTasks      Task[]        @relation("UserCreatedTasks")
  likedDishes       Dish[]        @relation("UserLikedDishes")
  savedDishes       Dish[]        @relation("UserSavedDishes")
  createdDishes     Dish[]        @relation("UserCreatedDishes")
}

model Dish {
  //Basic info
  id                   String        @id @default(cuid())
  image                String?
  name                 String
  instructions         String?
  prepTime             String?
  status               Status        @default(PENDING)
  createdBy            User?         @relation("UserCreatedDishes", fields: [createdById], references: [id])
  createdById          String?       
  likedBy              User[]        @relation("UserLikedDishes")
  savedBy              User[]        @relation("UserSavedDishes")
  types                DishType[]    @relation("DishTypes")
}

model Task {
  id                String        @id @default(cuid())
  name        String
  description String?
  priority    String    @default("low")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   User      @relation("UserCreatedTasks", fields: [createdById], references: [id])
  createdById String
}

model DishType {
  id          String     @id @default(cuid())
  name        String     @unique
  description String?
  dishes      Dish[]     @relation("DishTypes")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}
